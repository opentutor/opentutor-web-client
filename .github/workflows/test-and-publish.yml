name: test and publish
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "14.15"
      - name: Install
        run: npm ci
      - name: Run format test
        run: npm run test:format
      - name: Run license test
        run: npm run test:license
      - name: Install client
        run: cd client && npm ci
      # - name: Run audit
      #   run: cd client && npm run test:audit
      - name: Run lint test
        run: cd client && npm run test:lint
      - name: Run types test
        run: cd client && npm run test:types
  test-e2e:
    name: test e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build + run app in docker-compose
        run: docker-compose up -d
      - name: check services running
        run: docker ps
      - name: cypress - run tests
        run: make test-e2e-exec
      - name: cypress failed - retrieve image diffs
        run: |
          make test-e2e-image-snapshots-copy
          mkdir -p cypress/cypress/snapshots/snapshots/__diff_output__
        if: ${{ failure() }}
      - name: cypress failed - upload image-diff artifacts2
        uses: actions/upload-artifact@v1
        if: ${{ failure() }}
        with:
          name: snapshot_failed_diffs
          path: cypress/cypress/snapshots/snapshots/__diff_output__
  publish-check:
    name: publish check
    needs:
      - test
      - test-e2e
    runs-on: ubuntu-latest
    outputs:
      is_release: ${{ steps.is_release.outputs.is_release }}
    steps:
      - id: is_release
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+(-[a-z0-9.]*)?$ ]]; then
              echo ::set-output name=is_release::true
          fi
  build-and-publish:
    name: build + push docker image
    runs-on: ubuntu-latest
    needs:
      - publish-check
      - test
      - test-e2e
    if: needs.publish-check.outputs.is_release || github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: docker tag
        id: tag
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          echo ::set-output name=image_tag::${IMAGE_TAG}
      - name: docker login
        run: docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker build
        run: export DOCKER_IMAGE=opentutor/opentutor-web-client:${{ steps.tag.outputs.image_tag }} && make docker-build
      - name: docker tag release as version
        if: needs.publish-check.outputs.is_release == 'true'
        run: docker tag "opentutor/opentutor-web-client:${{ steps.tag.outputs.image_tag }}" "opentutor/opentutor-web-client:${GITHUB_REF#refs/tags/}"
      - name: docker tag main as latest
        if: github.ref == 'refs/heads/main'
        run: docker tag "opentutor/opentutor-web-client:${{ steps.tag.outputs.image_tag }}" "opentutor/opentutor-web-client:latest"
      - name: docker push
        run: docker push --all-tags opentutor/opentutor-web-client
